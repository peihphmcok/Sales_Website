import React, { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { useAuth } from '../context/AuthContext';

export default function Register() {
  const navigate = useNavigate();
  const { register: registerUser, isAuthenticated } = useAuth();
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    password: '',
    confirmPassword: '',
  });
  const [error, setError] = useState('');
  const [loading, setLoading] = useState(false);

  // Redirect n·∫øu ƒë√£ ƒëƒÉng nh·∫≠p
  React.useEffect(() => {
    if (isAuthenticated) {
      navigate('/');
    }
  }, [isAuthenticated, navigate]);

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
    setError('');
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError('');

    // Validate
    if (formData.password !== formData.confirmPassword) {
      setError('M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp');
      return;
    }

    if (formData.password.length < 6) {
      setError('M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±');
      return;
    }

    setLoading(true);

    const result = await registerUser(formData.name, formData.email, formData.password);

    if (result.success) {
      alert('‚úÖ ƒêƒÉng k√Ω th√†nh c√¥ng! Vui l√≤ng ƒëƒÉng nh·∫≠p.');
      navigate('/login');
    } else {
      setError(result.message || 'ƒêƒÉng k√Ω th·∫•t b·∫°i');
    }
    setLoading(false);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-amber-50 via-orange-50 to-amber-100 flex items-center justify-center py-12 px-4">
      <div className="max-w-md w-full">
        {/* Logo/Brand */}
        <div className="text-center mb-8">
          <div className="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-br from-amber-900 to-orange-900 rounded-full mb-4 shadow-xl">
            <span className="text-4xl">‚òï</span>
          </div>
          <h1 className="text-4xl font-bold text-amber-900 mb-2">ƒêƒÉng K√Ω</h1>
          <p className="text-gray-600">T·∫°o t√†i kho·∫£n ƒë·ªÉ b·∫Øt ƒë·∫ßu mua s·∫Øm</p>
        </div>

        {/* Register Form */}
        <div className="bg-white rounded-2xl shadow-2xl p-8">
          {error && (
            <div className="mb-6 bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg">
              <p className="text-sm">{error}</p>
            </div>
          )}

          <form onSubmit={handleSubmit} className="space-y-5">
            {/* Name */}
            <div>
              <label htmlFor="name" className="block text-sm font-semibold text-gray-700 mb-2">
                H·ªç v√† t√™n
              </label>
              <div className="relative">
                <span className="absolute left-4 top-1/2 transform -translate-y-1/2 text-xl">üë§</span>
                <input
                  type="text"
                  id="name"
                  name="name"
                  value={formData.name}
                  onChange={handleChange}
                  required
                  className="w-full pl-12 pr-4 py-3 border-2 border-amber-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 focus:border-transparent transition"
                  placeholder="Nguy·ªÖn VƒÉn A"
                />
              </div>
            </div>

            {/* Email */}
            <div>
              <label htmlFor="email" className="block text-sm font-semibold text-gray-700 mb-2">
                Email
              </label>
              <div className="relative">
                <span className="absolute left-4 top-1/2 transform -translate-y-1/2 text-xl">üìß</span>
                <input
                  type="email"
                  id="email"
                  name="email"
                  value={formData.email}
                  onChange={handleChange}
                  required
                  className="w-full pl-12 pr-4 py-3 border-2 border-amber-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 focus:border-transparent transition"
                  placeholder="email@example.com"
                />
              </div>
            </div>

            {/* Password */}
            <div>
              <label htmlFor="password" className="block text-sm font-semibold text-gray-700 mb-2">
                M·∫≠t kh·∫©u
              </label>
              <div className="relative">
                <span className="absolute left-4 top-1/2 transform -translate-y-1/2 text-xl">üîí</span>
                <input
                  type="password"
                  id="password"
                  name="password"
                  value={formData.password}
                  onChange={handleChange}
                  required
                  minLength={6}
                  className="w-full pl-12 pr-4 py-3 border-2 border-amber-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 focus:border-transparent transition"
                  placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                />
              </div>
              <p className="text-xs text-gray-500 mt-1">√çt nh·∫•t 6 k√Ω t·ª±</p>
            </div>

            {/* Confirm Password */}
            <div>
              <label htmlFor="confirmPassword" className="block text-sm font-semibold text-gray-700 mb-2">
                X√°c nh·∫≠n m·∫≠t kh·∫©u
              </label>
              <div className="relative">
                <span className="absolute left-4 top-1/2 transform -translate-y-1/2 text-xl">üîê</span>
                <input
                  type="password"
                  id="confirmPassword"
                  name="confirmPassword"
                  value={formData.confirmPassword}
                  onChange={handleChange}
                  required
                  className="w-full pl-12 pr-4 py-3 border-2 border-amber-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-amber-500 focus:border-transparent transition"
                  placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                />
              </div>
            </div>

            {/* Terms */}
            <div className="flex items-start">
              <input
                type="checkbox"
                id="terms"
                required
                className="w-4 h-4 mt-1 text-amber-900 border-amber-300 rounded focus:ring-amber-500"
              />
              <label htmlFor="terms" className="ml-3 text-sm text-gray-600">
                T√¥i ƒë·ªìng √Ω v·ªõi{' '}
                <Link to="/terms" className="text-amber-900 hover:text-amber-700 font-semibold">
                  ƒêi·ªÅu kho·∫£n s·ª≠ d·ª•ng
                </Link>{' '}
                v√†{' '}
                <Link to="/privacy" className="text-amber-900 hover:text-amber-700 font-semibold">
                  Ch√≠nh s√°ch b·∫£o m·∫≠t
                </Link>
              </label>
            </div>

            {/* Submit Button */}
            <button
              type="submit"
              disabled={loading}
              className="w-full bg-gradient-to-r from-amber-900 to-orange-900 text-white py-4 rounded-lg hover:from-amber-800 hover:to-orange-800 transition-all duration-300 font-bold text-lg shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 disabled:opacity-50 disabled:cursor-not-allowed"
            >
              {loading ? (
                <span className="flex items-center justify-center gap-2">
                  <span className="animate-spin">‚è≥</span> ƒêang x·ª≠ l√Ω...
                </span>
              ) : (
                'ƒêƒÉng K√Ω'
              )}
            </button>
          </form>

          {/* Divider */}
          <div className="mt-8 mb-6">
            <div className="relative">
              <div className="absolute inset-0 flex items-center">
                <div className="w-full border-t border-gray-300"></div>
              </div>
              <div className="relative flex justify-center text-sm">
                <span className="px-4 bg-white text-gray-500">Ho·∫∑c ƒëƒÉng k√Ω v·ªõi</span>
              </div>
            </div>
          </div>

          {/* Social Register */}
          <div className="space-y-3">
            <button className="w-full flex items-center justify-center gap-3 bg-white border-2 border-gray-200 text-gray-700 py-3 rounded-lg hover:bg-gray-50 transition font-semibold">
              <span className="text-xl">üîç</span>
              ƒêƒÉng k√Ω v·ªõi Google
            </button>
            <button className="w-full flex items-center justify-center gap-3 bg-white border-2 border-gray-200 text-gray-700 py-3 rounded-lg hover:bg-gray-50 transition font-semibold">
              <span className="text-xl">üìò</span>
              ƒêƒÉng k√Ω v·ªõi Facebook
            </button>
          </div>

          {/* Login Link */}
          <div className="mt-8 text-center">
            <p className="text-gray-600">
              ƒê√£ c√≥ t√†i kho·∫£n?{' '}
              <Link to="/login" className="text-amber-900 hover:text-amber-700 font-bold">
                ƒêƒÉng nh·∫≠p ngay
              </Link>
            </p>
          </div>
        </div>

        {/* Back to Home */}
        <div className="mt-6 text-center">
          <Link to="/" className="text-amber-900 hover:text-amber-700 font-semibold inline-flex items-center gap-2">
            ‚Üê Quay l·∫°i trang ch·ªß
          </Link>
        </div>
      </div>
    </div>
  );
}

